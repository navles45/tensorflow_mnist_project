# -*- coding: utf-8 -*-
"""MNIST CNN Test.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_vPzhzjHmKJ3s7b5QzjP_eSQBtfPKDF4
"""

import tensorflow.compat.v2 as tf
import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras import layers, optimizers, Sequential

(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()

x_train_reshaped = tf.reshape(x_train, [60000,28,28,1])
x_test_reshaped = tf.reshape(x_test, [10000, 28,28,1])

y_train_reshaped = tf.keras.utils.to_categorical(y_train, 10)
y_test_reshaped = tf.keras.utils.to_categorical(y_test, 10)

print(x_train.shape)

def model_cnn():
  model = Sequential()
  model.add(layers.Conv2D(30,(3,3), activation='relu', input_shape=(28,28,1)))
  model.add(layers.MaxPooling2D(2,2))
  model.add(layers.Conv2D(56,(3,3), activation='relu'))
  model.add(layers.MaxPooling2D(2,2))
  model.add(layers.Conv2D(112, (3,3)))
  model.add(layers.MaxPooling2D(2,2))
  model.add(layers.Flatten())
  model.add(layers.Dense(100, activation='relu'))
  model.add(layers.Dense(10, activation='softmax'))
  model.compile(optimizer='adam', loss='categorical_crossentropy',  metrics=['accuracy'])
  return model

model = model_cnn()

model.fit(x_train_reshaped, y_train_reshaped, epochs=10, verbose=1, steps_per_epoch=20, validation_data=(x_test_reshaped, y_test_reshaped), validation_steps=20)

image_index = 2371
predict_image = x_test[image_index]
predict_image_reshaped = tf.reshape(predict_image, [1,28,28,1])

plt.imshow(predict_image, cmap='Greys')
plt.show()
print(predict_image_reshaped)

prediction = model.predict(predict_image_reshaped, steps=1)

np.argmax(prediction)